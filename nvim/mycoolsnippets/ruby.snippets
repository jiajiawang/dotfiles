snippet # "#{}" i
#{$1}$0
endsnippet

snippet bp "binding.pry" b
binding.pry
endsnippet

snippet > ":key => value"
:${1:key} => ${2:value}
endsnippet

snippet expn "expect to not" b
expect($1).to_not $2
endsnippet

snippet expb "expect do end" b
expect do
  $1
end.to $2
endsnippet

snippet '\w+(,\w+)+' "array" r
`!p snip.rv = '["' + '", "'.join(match.group(0).split(',')) + '"]'`
endsnippet

# snippet ':' "bridge" r
# ($1)$0
# endsnippet

snippet ':(\w+:)' "bridge" r
($1, `!p snip.rv = match.group(1)`$2)$0
endsnippet

snippet ':(\w+:)(\w+:)' "bridge" r
(
  ${1:self},
  `!p snip.rv = match.group(1)` $2,
  `!p snip.rv = match.group(2)` $3)$0
endsnippet

snippet 'initWith\w+:' "Description" b

endsnippet

snippet '(Giv|Wh|Th)en' "Given|When|Then" r
`!p snip.rv = match.group(0)`(/^$0$/) do
end
endsnippet

snippet be "before do" b
before do
  $0
end
endsnippet

snippet beb "before {  }" b
before { $1 }$0
endsnippet

snippet 'desc|cont|it' "rspec do" r
`!p snip.rv = {'desc': 'describe', 'cont': 'context', 'it': 'it'}[match.group(0)]` "$1" do
  $2
end$0
endsnippet

snippet debug "debug" b
Rails.logger.debug ">"*50
Rails.logger.debug $1
Rails.logger.debug "<"*50
endsnippet


# Rspec
snippet al "allow receive" b
allow($1).to receive($2)${3:.and_return($4)}
endsnippet
